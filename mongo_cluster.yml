version: "2.4"
services:

  # Routers -------------------------------------------------------------------
  router_1:
    image: ${MONGO_IMAGE}
    container_name: router_1 # you can not replicate routers, because you need set host port for every router
    volumes:
      - "${MONGO_HOST_KEYFILE}:${MONGO_CONTAINER_KEYFILE}"
      - "./scripts:/scripts"
    ports:
      - "${MONGO_HOST_PORT}:${ROUTER_PORT}"
    depends_on:
      - cluster_init
    mem_limit: ${ROUTER_MEM_LIMIT}
    cpus: ${ROUTER_CPUS}
    command:
      - /bin/bash
      - -c
      - |
        /scripts/./start_mongos.sh ${MONGO_CONTAINER_KEYFILE} ${ROUTER_PORT} config-svr ${CLUSTER_PREFIX}_config ${CONFIG_PORT} ${CONFIG_COUNT}


  # Config Replica Set --------------------------------------------------------
  config:
    image: ${MONGO_IMAGE}
    environment: # The user will be using for authenicate to the cluster
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - "${MONGO_HOST_KEYFILE}:${MONGO_CONTAINER_KEYFILE}"
    mem_limit: ${CONFIG_MEM_LIMIT}
    cpus: ${CONFIG_CPUS}
    command: mongod --port ${CONFIG_PORT} --configsvr --replSet config-svr --keyFile ${MONGO_CONTAINER_KEYFILE}


  # Shards --------------------------------------------------------------------
  rs0shard:
    image: ${MONGO_IMAGE}
    environment: # We need user for connecting to the shard from other host (for initiation of shard replica set)
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - "${MONGO_HOST_KEYFILE}:${MONGO_CONTAINER_KEYFILE}"
    mem_limit: ${SHARD_MEM_LIMIT}
    cpus: ${SHARD_CPUS}
    command: mongod --port ${RS0SHARD_PORT} --shardsvr --replSet rs0 --keyFile ${MONGO_CONTAINER_KEYFILE}

  rs1shard:
    image: ${MONGO_IMAGE}
    environment: # We need user for connecting to the shard from other host (for initiation of shard replica set)
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - "${MONGO_HOST_KEYFILE}:${MONGO_CONTAINER_KEYFILE}"
    mem_limit: ${SHARD_MEM_LIMIT}
    cpus: ${SHARD_CPUS}
    command: mongod --port ${RS1SHARD_PORT} --shardsvr --replSet rs1 --keyFile ${MONGO_CONTAINER_KEYFILE}


  ## INIT containers ----------------------------------------------------------
  cluster_init:
    image: ${MONGO_IMAGE}
    volumes:
      - "./scripts:/scripts"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - config
      - rs0shard
    command:
      - /bin/bash
      - -c
      - |
        sleep ${CLUSTER_WAITING_TIME} # XXX need sleep because we have to connect to every config and every shard in replica set
        /scripts/./init_config.sh config-svr ${CONFIG_PORT} ${CLUSTER_PREFIX}_config ${CONFIG_COUNT}
        /scripts/./init_rs_shard.sh rs0 ${RS0SHARD_PORT} ${CLUSTER_PREFIX}_rs0shard ${RS0SHARD_COUNT}
        /scripts/./init_rs_shard.sh rs1 ${RS1SHARD_PORT} ${CLUSTER_PREFIX}_rs1shard ${RS1SHARD_COUNT}

  router_init:
    image: ${MONGO_IMAGE}
    volumes:
      - "./scripts:/scripts"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - router_1
      - cluster_init
    command:
      - /bin/bash
      - -c
      - |
        sleep ${ROUTER_WAITING_TIME} # XXX need sleeping time, because it will fail if replica set not initialized or have not primary node
        /scripts/./add_shard.sh router_1 ${ROUTER_PORT} rs0 ${RS0SHARD_PORT} ${CLUSTER_PREFIX}_rs0shard ${RS0SHARD_COUNT}
        /scripts/./add_shard.sh router_1 ${ROUTER_PORT} rs1 ${RS1SHARD_PORT} ${CLUSTER_PREFIX}_rs1shard ${RS1SHARD_COUNT}

