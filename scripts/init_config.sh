#!/bin/bash

INITDB_ROOT_NAME=${MONGO_INITDB_ROOT_USERNAME}
INITDB_ROOT_PASS=${MONGO_INITDB_ROOT_PASSWORD}

CONFIG_RS_NAME=$1
CONFIG_SERVER_PORT=$2
CONFIG_SERVER_NAME=$3
CONFIG_RS_COUNT=$4

MONGO_INITIALIZED_PLACEHOLDER=".mongo_config_srv_initialized_"$CONFIG_RS_NAME

if [ -f $MONGO_INITIALIZED_PLACEHOLDER ]; then
  echo "INFO: $CONFIG_RS_NAME ALREADY INITIALIZED"
  exit 0 # Already initialized
else
  echo "INITIALIZATION CONFIG_SERVER: $CONFIG_RS_NAME"

  echo "DEBUG: CONFIG_RS_NAME     = $CONFIG_RS_NAME"
  echo "DEBUG: CONFIG_SERVER_PORT = $CONFIG_SERVER_PORT"
  echo "DEBUG: CONFIG_SERVER_NAME = $CONFIG_SERVER_NAME"
  echo "DEBUG: CONFIG_RS_COUNT    = $CONFIG_RS_COUNT"

  CONFIG_STR=""
  for i in $(seq 1 $CONFIG_RS_COUNT); do
    if [ $i -eq 1 ]; then #empty string
      CONFIG_STR="{_id: $i, host: \"${CONFIG_SERVER_NAME}_$i:$CONFIG_SERVER_PORT\"}"
    else
      CONFIG_STR="$CONFIG_STR, {_id: $i, host: \"${CONFIG_SERVER_NAME}_$i:$CONFIG_SERVER_PORT\"}"
    fi
  done

  CONFIG_SERVER_CONTAINER="${CONFIG_SERVER_NAME}_1" # connect to first container

  echo "DEBUG: $CONFIG_SERVER_CONTAINER:$CONFIG_SERVER_PORT rs.initiate({_id: \"$CONFIG_RS_NAME\", configsvr: true, members: [$CONFIG_STR]})"
  mongo --host $CONFIG_SERVER_CONTAINER --port $CONFIG_SERVER_PORT -u $INITDB_ROOT_NAME -p $INITDB_ROOT_PASS <<< "rs.initiate({_id: \"$CONFIG_RS_NAME\", configsvr: true, members: [$CONFIG_STR]})"

  if [ $? -eq 0 ]; then
    touch $MONGO_INITIALIZED_PLACEHOLDER
    echo "SUCCESS CONFIG_SERVER: $CONFIG_RS_NAME INITIALIZED"
    exit 0
  else
    echo "ERROR CONFIG_SERVER: $CONFIG_RS_NAME NOT INITIALIZED!!!"
    exit 1
  fi
fi

